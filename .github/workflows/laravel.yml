name: ai-school

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate Laravel Key
        run: php artisan key:generate

      - name: Set Directory Permissions
        run: chmod -R 775 storage bootstrap/cache

      - name: Run Larastan for Static Analysis
        run: ./vendor/bin/phpstan analyse -c phpstan.neon --memory-limit=1G
  deploy:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}
        run: |
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
            cd $SERVER_PATH

            # Pull the latest changes from the main branch
            if [ ! -d ".git" ]; then
                sudo -u deployer git clone https://github.com/hosseinmirzapur/ai-school-backend.git .
              else
                sudo -u deployer git stash
                sudo -u deployer git pull origin main
                sudo -u deployer git stash pop
              fi

            # Copy .env to the project directory
            sudo -u deployer cp ../.env ./

            # Set directory permissions for storage and cache
            sudo -u deployer chmod -R 777 storage bootstrap/cache

            # Install/update dependencies and optimize the app
            sudo -u deployer php8.2 /usr/local/bin/composer install --no-dev --optimize-autoloader
            sudo -u deployer php8.2 artisan migrate --force
            sudo -u deployer php8.2 artisan config:cache
            sudo -u deployer php8.2 artisan route:cache
            sudo -u deployer php8.2 artisan view:cache
            sudo -u deployer php8.2 artisan storage:link
            sudo -u deployer php8.2 artisan filament:optimize
          EOF
